service: schedule-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  deploymentBucket:
    name: arun-practice
  deploymentPrefix: lambda/auction-service
  stage: ${opt:stage, 'dev'}
  region: ap-south-1
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.Name}
    MAIL_QUEUE_URL: ${self:custom.MailQueue.Url}
    MAIL_QUEUE_ARN: ${self:custom.MailQueue.Arn}
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:PutItem
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:Query
      Resource: 
        - ${self:custom.AuctionsTable.Arn}
        - !Join ['/', [ '${self:custom.AuctionsTable.Arn}', 'index', 'statusAndEndDate' ]]
    - Effect: Allow
      Action: 
        - sqs:SendMessage
      Resource: ${self:custom.MailQueue.Arn}
        
functions:
  processAuctions:
    handler: index.handler
    events:
      - schedule: rate(10 minutes)

custom:
  AuctionsTable:
    Arn:
      Fn::ImportValue: AuctionsTableArn-${self:provider.stage}
    Name: AuctionsTable-${self:provider.stage}
  MailQueue:
    Arn: ${cf:notification-service-${self:provider.stage}.MailQueueArn}
    Url: ${cf:notification-service-${self:provider.stage}.MailQueueUrl}
